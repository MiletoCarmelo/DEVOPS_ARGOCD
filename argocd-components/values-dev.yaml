# Define projects
projects:
  - name: infrastructure
  - name: quant-cm
  - name: qantor-capital
  - name: dagster
  - name: kafka

# Define repository configurations
subChartRepositories:
  - name: generic-python-frontend
    project: quant-cm
    url: https://raw.githubusercontent.com/miletocarmelo/DEVOPS_HELM_generic_python_frontend/github-pages
  - name: generic-dagster-backend
    project: quant-cm
    url: https://raw.githubusercontent.com/miletocarmelo/devpos_helm_generic_dagster_backend/github-pages
    
# Define applications
apps:
#   - name: tailscale
#     namespace: tailscale
#     project: infrastructureDEVOPS_HELM_generic_python_frontend
#     source:
#       chart: tailscale-operator
#       repoURL: https://pkgs.tailscale.com/helmcharts
#       targetRevision: 1.76.6
#     helm:
#       values: |
#         operator:
#           oauth:
#             existingClientIDSecret:
#               name: operator-oauth
#               key: client_id
#             existingClientSecretSecret:
#               name: operator-oauth
#               key: client_secret
#         proxy:
#          enabled: true
#          routes:
#            - service: ingress-setup-dev.dev  # Le service de votre ingress dans le namespace dev
#              port: 80
#              hostname: mm.ts.ch  # ou le nom que vous préférez

  - name: httpbin
    namespace: httpbin
    project: infrastructure
    source:
      repoURL: https://github.com/MiletoCarmelo/DEVOPS_HELM_localhost_ingress.git
      path: httpbin
      targetRevision: prod
      directory:
        recurse: true
        jsonnet: {}

  # Ajoutez la config Tailscale
  - name: tailscale-proxy
    namespace: tailscale
    project: infrastructure
    source:
      repoURL: https://github.com/MiletoCarmelo/DEVOPS_HELM_localhost_ingress.git
      path: tailscale-proxy
      targetRevision: prod
      directory:
        recurse: true
        jsonnet: {}

  - name: cert-manager
    namespace: cert-manager
    project: infrastructure
    source:
      chart: cert-manager
      repoURL: https://charts.jetstack.io
      targetRevision: v1.16.1
      helm:
        values: |
          installCRDs: true
          global:
            leaderElection:
              namespace: cert-manager

  - name: sealed-secrets
    namespace: sealed-secrets
    project: infrastructure
    source:
      chart: sealed-secrets
      repoURL: https://bitnami-labs.github.io/sealed-secrets
      targetRevision: 2.16.2
      helm:
        values: |
          fullnameOverride: sealed-secrets
          commandArgs:
            - --update-status
            - --allow-namespace-wide
          serviceMonitor:
            enabled: false
          ingress:
            enabled: false
          secretName: "sealed-secrets-key"

  - name: metallb
    namespace: metallb-system
    project: infrastructure
    source:
      chart: metallb
      repoURL: https://metallb.github.io/metallb
      targetRevision: 0.14.7
      helm:
        values: |
          crds:
            enabled: true
          controller:
            enabled: true
          speaker:
            enabled: true

  - name: metallb-config
    namespace: metallb-system
    project: infrastructure
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
        - CreateNamespace=true
    source:
      repoURL: https://github.com/MiletoCarmelo/DEVOPS_HELM_localhost_ingress.git
      path: metallb-config
      targetRevision: prod
      helm:       # Ajout de cette section
        valueFiles: values.yaml 

  - name: ingress-nginx
    namespace: ingress-nginx
    project: infrastructure
    source:
      chart: ingress-nginx
      repoURL: https://kubernetes.github.io/ingress-nginx
      targetRevision: 4.11.3
      helm:
        values: |
          controller:
            publishService:
              enabled: true
            service:
              type: LoadBalancer
              externalTrafficPolicy: Local
            metrics:
              enabled: true
            config:
              use-forwarded-headers: "true"
              use-proxy-protocol: "false"
              proxy-real-ip-cidr: "192.168.68.0/24"  # Ajusté pour votre réseau Minikube

  - name: ingress-setup-dev
    namespace: dev
    project: quant-cm
    source:
      repoURL: https://github.com/MiletoCarmelo/DEVOPS_HELM_localhost_ingress.git
      path: ingress-setup
      helm:
        valueFiles: values.dev.yaml
      targetRevision: prod
      
  - name: success-app-dev
    namespace: dev
    project: quant-cm
    source:
      repoURL: https://github.com/MiletoCarmelo/success-app.git
      path: "k8s"
      helm:
        valueFiles: values.dev.yaml
      targetRevision: prod

  - name: tsa-dev
    namespace: dev
    project: quant-cm
    source:
      repoURL: https://github.com/MiletoCarmelo/DEVOPS_DEPLOY_TradingStrategyAnaylsis.git
      path: umbrella-trading-strategy-analysis
      helm:
        valueFiles: values.dev.yaml
      targetRevision: prod

  - name: optionsviz-dev
    namespace: dev
    project: quant-cm
    source:
      repoURL: https://github.com/MiletoCarmelo/DEVOPS_DEPLOY_OptionsViz.git
      path: umbrella-optionsviz
      helm:
        valueFiles: values.dev.yaml
      targetRevision: prod

  - name: postgres-dev
    namespace: postgres
    project: quant-cm
    source:
      repoURL: https://github.com/MiletoCarmelo/DEVOPS_DEPLOY_postgres.git
      path: umbrella-postgres
      helm:
        valueFiles: values.dev.yaml
      targetRevision: main

  - name: ib-dev
    namespace: trading
    project: qantor-capital
    source:
      repoURL: https://github.com/MiletoCarmelo/DEVOPS_HELM_IB.git
      path: .
      helm:       # Ajout de cette section
        valueFiles: values.yaml    # ou values.dev.yaml si vous avez des fichiers par environnement
      targetRevision: main
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
      - CreateNamespace=true
      - Replace=true  # Force le remplacement des ressources

  - name: dagster-dev
    namespace: dagster-dev
    project: quant-cm
    source:
      repoURL: https://github.com/MiletoCarmelo/DEVOPS_DEPLOY_dagster.git
      path: dagster-components
      helm:       # Ajout de cette section
        valueFiles: values.dev.yaml    # ou values.dev.yaml si vous avez des fichiers par environnement
      targetRevision: main
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
      - CreateNamespace=true
      - Replace=true  # Force le remplacement des ressources

  - name: dagster-pipeline-successtest
    namespace: dagster-dev  # même namespace que l'orchestrateur
    project: quant-cm
    source:
      repoURL: https://github.com/MiletoCarmelo/DEVOPS_DEPLOY_DAGSTER_PIPELINE_successtest.git
      path: .
      helm:
        valueFiles: values.yaml
      targetRevision: main
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
      - CreateNamespace=true

  - name: kafka-dev
    namespace: kafka-dev  # même namespace que l'orchestrateur
    project: quant-cm
    source:
      repoURL: https://github.com/MiletoCarmelo/DEVOPS_DEPLOY_kafka.git
      path: kafka-components
      helm:
        valueFiles: values.dev.yaml    # ou values.dev.yaml si vous avez des fichiers par environnement
      targetRevision: main
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
      - CreateNamespace=true
      - Replace=true

  - name: zookeeper-dev
    namespace: kafka-dev
    project: quant-cm
    source:
      repoURL: https://github.com/MiletoCarmelo/DEVOPS_DEPLOY_zookeeper.git
      path: zookeeper-components
      helm:
        valueFiles: values.dev.yaml
    targetRevision: main
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
      - CreateNamespace=true
      - Replace=true

  - name: price-streamer-dev
    namespace: kafka-dev
    project: quant-cm
    source:
      repoURL: https://github.com/MiletoCarmelo/DEVOPS_DEPLOY_finance_price_streamer.git
      path: umbrella-finance-price-streamer
      helm:
        valueFiles: values.dev.yaml
    targetRevision: main
    syncPolicy:
      automated:
        prune: true
        selfHeal: true
      syncOptions:
      - CreateNamespace=true
      - Replace=true

  - name: prometheus-crds
      namespace: monitoring
      project: infrastructure
      source:
        repoURL: https://github.com/prometheus-community/helm-charts.git
        targetRevision: kube-prometheus-stack-66.3.0
        path: charts/kube-prometheus-stack/crds
        directory:
          recurse: true
      destination:
        server: https://kubernetes.default.svc
        namespace: monitoring
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - Replace=true
        automated:
          prune: true
          selfHeal: true

    - name: prometheus-monitoring
      namespace: monitoring
      project: infrastructure
      source:
        repoURL: https://github.com/MiletoCarmelo/DEVOPS_DEPLOY_prometheus.git
        path: umbrella_prometheus
        targetRevision: main
        helm:
          valueFiles: values.yaml
          parameters:
            - name: "kube-prometheus-stack.prometheusOperator.createCustomResourceDefinitions"
              value: "false"  # Changé à false car les CRDs sont installés séparément
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
          - Replace=true
        automated:
          prune: true
          selfHeal: true
      ignoreDifferences:
        - group: apiextensions.k8s.io
          kind: CustomResourceDefinition
          jsonPointers:
            - /metadata/annotations
      depends_on:
        - name: prometheus-crds